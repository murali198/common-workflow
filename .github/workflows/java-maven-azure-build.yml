name: java-maven-build-acr

on:
  workflow_call:
    inputs:
      java_version:
        required: true
        type: string
      java_distribution:
        required: false
        default: "temurin"
        type: string
      registry_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      image_tag:
        required: false
        type: string
      runs_on:
        required: false
        type: string
        default: ubuntu-latest
    secrets:
      registry_username:
        required: true
      registry_password:
        required: true

jobs:
  build:
    runs-on: ${{inputs.runs_on}}

    steps:
      - uses: actions/checkout@v3
        name: Checkout the code

      - name: setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: "${{inputs.java_version}}"
          distribution: "${{inputs.java_distribution}}"

      - name: Login ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{inputs.registry_name}}.azurecr.io
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}

      - name: Build with Maven
        run: mvn clean install --file pom.xml

      - name: setup image tag
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build and push image to ACR
        run: |
          docker build . -t ${{inputs.registry_name}}.azurecr.io/${{inputs.image_name}}:${{ steps.vars.outputs.sha_short }}
          docker push ${{inputs.registry_name}}.azurecr.io/${{inputs.image_name}}:${{ steps.vars.outputs.sha_short }}

      - name: Create an issue
        uses: JasonEtco/create-an-issue@v2.6.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENVIRONMENT: Dev
          RUNNUMBER: ${{ github.run_number  }}
          TAG: ${{ steps.vars.outputs.sha_short }}
        with:
          filename: .github/deploy-issue-template.md
